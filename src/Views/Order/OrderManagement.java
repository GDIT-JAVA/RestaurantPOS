/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Order;

import Controller.OrderDetailController;
import Controller.OrderManagementController;
import Models.Order;
import Views.Order.Components.OrderListButton;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author PPuarat
 */
public class OrderManagement extends javax.swing.JPanel {

    /**
     * Creates new form OrderManagement
     */
    public OrderManagement() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderListScroll = new javax.swing.JScrollPane();
        orderListPanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1200, 675));
        setLayout(new java.awt.GridLayout(1, 1));

        orderListScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        orderListScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        orderListScroll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderListScroll.setMaximumSize(new java.awt.Dimension(1200, 32767));
        orderListScroll.setPreferredSize(new java.awt.Dimension(1200, 675));

        orderListPanel.setMaximumSize(new java.awt.Dimension(1000, 32767));
        orderListPanel.setPreferredSize(new java.awt.Dimension(1000, 0));
        orderListPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 15, 20));
        orderListScroll.setViewportView(orderListPanel);

        add(orderListScroll);
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        orderManagementCon = new OrderManagementController();
        displayOrder();
    }

    private void displayOrder() {
        ArrayList<Order> orders;
        orders = orderManagementCon.initOrderManagement();

        orders.stream().map((order) -> {
            JButton orderBtn = new OrderListButton(order);
            
            orderBtn.addActionListener((java.awt.event.ActionEvent evt) -> {
                orderBtnActionPerformed(evt, order);
            });
            return orderBtn;
        }).forEachOrdered((orderBtn) -> {
            //Add a button to display panel
            orderListPanel.add(orderBtn);
        });
    }

    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt, Order selectedOrder) {
        // TODO add your handling code here:
        removeAll();
        orderDetail = new OrderDetail(selectedOrder);
        add(orderDetail);
        repaint();
        revalidate();
        
    }
    
    JPanel orderDetail;
    OrderManagementController orderManagementCon;
    Map<Long, JButton> orderBtnMap;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel orderListPanel;
    private javax.swing.JScrollPane orderListScroll;
    // End of variables declaration//GEN-END:variables
}
